apiVersion: apps/v1 
kind: Deployment 
metadata: 
  name: springboot-crud-deployment
spec:
  replicas: 3
  selector: 
    matchLabels: 
      app: springboot-k8s-mysql
  template: 
    metadata:
      labels:
        app: springboot-k8s-mysql
    spec:
      containers: 
        - name: my-nodejs
          image: webdevloper/node-final-api-saddam:v2
          # env:
          #   - name: MONGO_URI
          #     value: mongodb://mongo:27017/cinema
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom: 
                secretKeyRef: 
                  name: mongodb-secret
                  key:  mongo-root-password
            - name: MONGO_INITDB_HOST
              valueFrom:
                configMapKeyRef: 
                  name: db-config
                  key: dbName
            - name: DB_HOST 
              valueFrom:
                configMapKeyRef:
                  name: db-config
                  key: host
          ports: 
          - containerPort: 5000
--- 

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: springboot-crud-svc
spec:
  selector:
    app: springboot-k8s-mysql
  ports:
    - protocol: "TCP"
      port: 80 # The port that the service is running on in the cluster
      targetPort: 5000 # The port exposed by the service
  type: NodePort # type of the service.
